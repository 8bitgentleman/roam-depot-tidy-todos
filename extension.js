var r={100:(r,n,t)=>{t.d(n,{Z:()=>l});var o=t(81),e=t.n(o),i=t(645),a=t.n(i)()(e());a.push([r.id,'span.rm-page-ref[data-tag="tidy"], span.rm-page-ref[data-tag="tidy"] {\r\n  background: none;\r\n  border-radius: 10px;\r\n  padding: 1px 10px 1px 10px;\r\n  zoom: 80%;\r\n  color:#5c7080 !important;\r\n  border: 1px solid #5c7080 !important;\r\n  margin: 0 4px !important;\r\n}\r\n\r\n.tidyButton{\r\n  margin:0 6px 0 -4px !important\r\n}\r\n\r\n.tidyRemoveButton {\r\n  margin-left: -8px !important;\r\n  margin-top: -2px !important;\r\n}\r\n\r\n.tidyButton:hover, .tidyRemoveButton:hover{\r\n  background: transparent !important;\r\n}\r\n\r\n.tidyButton span, .tidyRemoveButton span {\r\n  padding-left: -2px !important;\r\n}\r\n\r\n.tidyButton svg, .tidyRemoveButton svg {\r\n  width: 14px !important;\r\n  height: 14px !important;\r\n  opacity: 0.8 !important;\r\n}',""]);const l=a},645:r=>{r.exports=function(r){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=r(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(r,t,o,e,i){"string"==typeof r&&(r=[[null,r,void 0]]);var a={};if(o)for(var l=0;l<this.length;l++){var d=this[l][0];null!=d&&(a[d]=!0)}for(var c=0;c<r.length;c++){var s=[].concat(r[c]);o&&a[s[0]]||(void 0!==i&&(void 0===s[5]||(s[1]="@layer".concat(s[5].length>0?" ".concat(s[5]):""," {").concat(s[1],"}")),s[5]=i),t&&(s[2]?(s[1]="@media ".concat(s[2]," {").concat(s[1],"}"),s[2]=t):s[2]=t),e&&(s[4]?(s[1]="@supports (".concat(s[4],") {").concat(s[1],"}"),s[4]=e):s[4]="".concat(e)),n.push(s))}},n}},81:r=>{r.exports=function(r){return r[1]}},186:r=>{r.exports='(ns tidy-todo-v8\r\n  (:require\r\n   [reagent.core :as r]\r\n   [roam.block :as block]\r\n   [datascript.core :as d]\r\n   [roam.datascript.reactive :as dr]\r\n   [clojure.string :as str]\r\n   [clojure.pprint :refer [pprint]]\r\n   [promesa.core :as p]\r\n   [roam.util :refer [parse]]\r\n   [blueprintjs.core :as bp]\r\n   [roam.datascript :as rd]\r\n   ))\r\n\r\n; THIS CODEBLOCK IS OVERWRITTEN ON EVERY VERSION UPDATE\r\n; DO NOT MODIFY\r\n\r\n(defonce bp-button (r/adapt-react-class bp/Button))\r\n\r\n(defn find-blocks-that-ref\r\n  "Returns all _refs for each children block given a parent block uid" \r\n  [block-uid ref-title]\r\n  (dr/q \'[:find (pull ?node [:block/string :block/uid])\r\n          :in $ ?uid ?ref-page-name\r\n          :where\r\n          [?e :block/uid ?uid]\r\n          [?e :block/children ?node]\r\n          [?node :block/refs ?DONE-Ref]\r\n          [?DONE-Ref :node/title ?ref-page-name]]\r\n    block-uid ref-title))\r\n\r\n(defn get-string [item]\r\n  (:block/string (first item)))\r\n\r\n(defn sort-by-string [data]\r\n  (sort-by #(str/lower-case (get-string %)) data))\r\n\r\n(defn move-to-end [parent-uid item]\r\n  (block/move\r\n    {:location {:parent-uid parent-uid\r\n                :order "last"}\r\n     :block {:uid (:block/uid (first item))}}))\r\n\r\n(defn sort-all-todos[parent-uid]\r\n  \r\n  (r/with-let [\r\n               TODOs (find-blocks-that-ref parent-uid "TODO")\r\n               DONEs (find-blocks-that-ref parent-uid "DONE")\r\n               ARCHIVEDs (find-blocks-that-ref parent-uid "ARCHIVED")\r\n              ]\r\n    (p/run!\r\n      (fn [item]\r\n        (prn (first item))\r\n        (block/move\r\n          {:location {:parent-uid parent-uid\r\n                      :order "last"}\r\n           :block {:uid (:block/uid (first item))}}))\r\n      (concat\r\n        @TODOs\r\n        (sort-by-string @DONEs)\r\n        (sort-by-string @ARCHIVEDs)\r\n        )\r\n      )\r\n    )\r\n  )\r\n\r\n;; functions for removing the tidy\r\n(defn clean-tidy-string [input-string]\r\n  (let [pattern #"\\{\\{\\[\\[roam/render\\]\\]\\:.*?\\}\\}"\r\n        cleaned-string (clojure.string/replace input-string pattern "")]\r\n    cleaned-string))\r\n\r\n(defn get-block-string [uid]\r\n  (:block/string (rd/pull \r\n      \'[:block/string \r\n        ] \r\n      [:block/uid uid]))\r\n)\r\n\r\n(defn update-block-string\r\n  [block-uid block-string]\r\n  (block/update \r\n      {:block {:uid block-uid \r\n               :string block-string}})\r\n  )\r\n\r\n(defn remove-tidy [block-uid]\r\n  (->> block-uid\r\n    (get-block-string )\r\n    (clean-tidy-string)\r\n    (update-block-string block-uid)\r\n    )\r\n  )\r\n\r\n  (defn button [block-uid]\r\n    [bp-button \r\n        {:small true\r\n         :outlined false\r\n         :minimal true\r\n         :icon "sort"\r\n         :class "tidyButton"\r\n         :style{ :margin-right "4px"}\r\n         :title "Click to tidy this list"\r\n         :on-click (fn [e]\r\n                     (sort-all-todos block-uid))\r\n       }]\r\n)\r\n(defn delete-button [block-uid]\r\n    [bp-button \r\n        {:small true\r\n         :outlined false\r\n         :minimal true\r\n         :icon "small-cross"\r\n         :class "tidyRemoveButton"\r\n         :style{ :margin-right "4px"}\r\n         :title "Remove the tidy component"\r\n         :on-click (fn [e]\r\n                     (remove-tidy block-uid))\r\n       }]\r\n)\r\n\r\n(defn main [{:keys [block-uid]} & args]\r\n    [:div\r\n       (parse (str "#[[" (first args) "]]")) \r\n        [button block-uid]\r\n        [delete-button block-uid]\r\n        ]\r\n    )'}},n={};function t(o){var e=n[o];if(void 0!==e)return e.exports;var i=n[o]={id:o,exports:{}};return r[o](i,i.exports,t),i.exports}t.n=r=>{var n=r&&r.__esModule?()=>r.default:()=>r;return t.d(n,{a:n}),n},t.d=(r,n)=>{for(var o in n)t.o(n,o)&&!t.o(r,o)&&Object.defineProperty(r,o,{enumerable:!0,get:n[o]})},t.o=(r,n)=>Object.prototype.hasOwnProperty.call(r,n);var o={};(()=>{t.d(o,{Z:()=>k});var r=t(100),n=t(186),e=t.n(n);function i(r){roamAlphaAPI.deleteBlock({block:{uid:r}})}function a(){let r=new Date(Date.now());return window.roamAlphaAPI.util.dateToPageTitle(r)}function l(r){let n=roamAlphaAPI.util.generateUID();return roamAlphaAPI.data.page.create({page:{title:r,uid:n}}),n}function d(r){return roamAlphaAPI.q(`[:find (pull ?e [:block/uid]) :where [?e :node/title "${r}"]]`)?.[0]?.[0].uid||null}function c(n,t,o,c,s,u,p,g,m){1==n?(function(r,n,t,o,i){let c=d(r)||l(r),s=roamAlphaAPI.util.generateUID(),u=roamAlphaAPI.util.generateUID(),p=roamAlphaAPI.util.generateUID();roamAlphaAPI.createBlock({location:{"parent-uid":c,order:0},block:{string:`${i} [[${a()}]]`,uid:n,open:!0,heading:3}}),roamAlphaAPI.createBlock({location:{"parent-uid":n,order:0},block:{string:`${i} ${t} [[roam/templates]]`,uid:s,open:!0}}),roamAlphaAPI.createBlock({location:{"parent-uid":s,order:0},block:{string:`{{[[roam/render]]:((${o})) tidy}}`,uid:p}}),roamAlphaAPI.createBlock({location:{"parent-uid":n,order:"last"},block:{string:"code",uid:u,open:!1}});let g="```clojure\n "+e()+" ```";roamAlphaAPI.createBlock({location:{"parent-uid":u,order:0},block:{uid:o,string:g}})}("roam/render",t,c,g,m),function(r,n,t,o){let e=d("roam/css")||l("roam/css");roamAlphaAPI.createBlock({location:{"parent-uid":e,order:"last"},block:{string:`${o} [[${a()}]]`,uid:r,open:!1,heading:3}});let i="```css\n "+t.toString()+" ```";roamAlphaAPI.createBlock({location:{"parent-uid":r,order:0},block:{uid:n,string:i}})}(o,p,r.Z,`${m} STYLE`)):0==n&&(function(r,n){let t=`[:find\n        (pull ?node [:block/string :node/title :block/uid])\n      :where\n        (or [?node :block/string ?node-String]\n      [?node :node/title ?node-String])\n        [(clojure.string/includes? ?node-String "${r}")]\n      ]`;window.roamAlphaAPI.q(t).flat().forEach((t=>{const o=t.string.replace(r,n);window.roamAlphaAPI.updateBlock({block:{uid:t.uid,string:o}})}))}(s,u),i(t),i(o))}const s="Tidy TODOs",u="roam-render-tidy-todos-cljs",p="roam-render-tidy-todos-css",g=`{{[[roam/render]]:((${u}))`,m="{{tidy-todos}}",b="roam-render-tidy-todos",f="tidy-todos-css-parent",k={onload:function({extensionAPI:r}){r.settings.panel.create({tabTitle:"Tidy TODOs",settings:[]}),roamAlphaAPI.data.pull("[*]",[":block/uid",b])||c(!0,b,f,"v8",g,m,p,u,s),console.log(`load ${s} plugin`)},onunload:function(){console.log(`unload ${s} plugin`),c(!1,b,f,"v8",g,m,p,u,s)}}})();var e=o.Z;export{e as default};